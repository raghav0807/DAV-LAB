# -*- coding: utf-8 -*-
"""assignment3-cs-202151124.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1iXWKF0Xdk5dr2kUYNda3BnsUpt_06dwx
"""

#Name - Raghav Agiwal
#Roll No - 202151124
#Assignment 3


import pandas as pd
import seaborn as sns
import numpy as np
import matplotlib.pyplot as plt
from statsmodels.graphics.gofplots import qqplot
from joypy import joyplot

# Reading CSV files
grain_production_data_path = '/content/grains_production_india_from_2001_to_2017.csv'


# Read CSV files into Pandas DataFrames
prod = pd.read_csv(grain_production_data_path)

print(prod.head())

data_selected = pd.DataFrame()
data_selected['Year'] = prod['Year']
data_selected['Maize'] = prod['Food Grains (Cereals) - Maize (000 tonnes)']
data_selected['Ragi'] = prod['Food Grains (Cereals) - Ragi (000 tonnes)']
data_selected['Bajra'] = prod['Food Grains (Cereals) - Bajra (000 tonnes)']
data_selected['Tur'] = prod['Food Grains (Pulses) - Tur (000 tonnes)']
data_selected['Ground-nuts'] = prod['Oilseeds - Ground-nuts (000 tonnes)']
data_selected['Coconut'] = prod['Coconut (000 tonnes)']

# Indexing the data frames with the 'Year' column
data_selected.set_index('Year', inplace=True)

# Computing the mean of the columns and filling NaN values with the mean
data_selected = data_selected.fillna(data_selected.mean())
print(data_selected)



# Point plots
plt.figure(figsize=(10, 6))
sns.pointplot(data=data_selected, join=True)
plt.title('PointPlot of grains and Their Production', fontsize=16)
plt.xlabel('Grains', fontsize=14)
plt.ylabel('Production in tonnes', fontsize=14)
plt.xticks(fontsize=12)
plt.yticks(fontsize=12)
plt.tight_layout()
plt.show()

# Point plot of only ragi
plt.figure(figsize=(8, 5))
sns.pointplot(data=data_selected['Ragi'])
plt.title('PointPlot of Ragi Production', fontsize=16)
plt.xlabel('Year', fontsize=14)
plt.ylabel('Production in tonnes', fontsize=14)
plt.xticks(rotation=45, fontsize=12)
plt.yticks(fontsize=12)
plt.tight_layout()
plt.show()

# Strip plot
plt.figure(figsize=(10, 6))
sns.stripplot(data=data_selected)
plt.title('Stripplot', fontsize=16)
plt.xlabel('Grains', fontsize=14)
plt.ylabel('Production in tonnes', fontsize=14)
plt.xticks(fontsize=12)
plt.yticks(fontsize=12)
plt.tight_layout()
plt.show()

# Strip plot of only coconut
plt.figure(figsize=(8, 5))
sns.stripplot(data=data_selected['Coconut'])
plt.title('StripPlot of Coconut Production', fontsize=16)
plt.xlabel('Year', fontsize=14)
plt.ylabel('Production in tonnes', fontsize=14)
plt.xticks(rotation=45, fontsize=12)
plt.yticks(fontsize=12)
plt.tight_layout()
plt.show()

# Box Plot
plt.figure(figsize=(10, 6))
sns.boxplot(data=data_selected)
plt.xticks(rotation=45, fontsize=12)
plt.yticks(fontsize=12)
plt.title('Box Plot of Grain Production', fontsize=16)
plt.tight_layout()
plt.show()

# Violin Plot
plt.figure(figsize=(10, 6))
sns.violinplot(data=data_selected)
plt.xticks(rotation=45, fontsize=12)
plt.yticks(fontsize=12)
plt.title('Violin Plot of Grain Production', fontsize=16)
plt.tight_layout()
plt.show()

# Joy Plot
plt.figure(figsize=(10, 6))
joyplot(data_selected, overlap=0)
plt.xlabel("Grain Production", fontsize=14)
plt.title('Joy Plot of Grain Production (In tonnes)', fontsize=16)
plt.xticks(fontsize=12)
plt.yticks(fontsize=12)
plt.show()