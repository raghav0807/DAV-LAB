# -*- coding: utf-8 -*-
"""Assignment5-CS-202151124.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1v2AQy0v13cvg_qpfTsOsrtgSnsmWgF2r
"""

# RAGHAV AGIWAL
# 202151124
# Importing necessary libraries
import pandas as pd
import seaborn as sns
import numpy as np
import matplotlib.pyplot as plt
from matplotlib import transforms
from joypy import joyplot
import squarify
import plotly.express as px
from itertools import product

# Reading milk production data
milk_production_data = pd.read_csv(
    "/content/Milk_Production_2007_2012 (1).csv", index_col='States/Uts')
milk_production_data.head()

# Reading egg production data
egg_production_data = pd.read_csv(
    "/content/Egg_Production_2007_2012 (1).csv", index_col='States/Uts')
egg_production_data.columns = milk_production_data.columns
egg_production_data.head()

# Merging egg and milk production data
merged_production_data = pd.concat([egg_production_data, milk_production_data], axis=1, keys=['Egg', 'Milk'])
merged_production_data.fillna(0, inplace=True)
merged_production_data.head()

# Creating temporary dataframes for egg and milk production
egg_temp = egg_production_data.copy()
milk_temp = milk_production_data.copy()
egg_temp.columns = pd.MultiIndex.from_product([egg_production_data.columns, ['EggTemp']])
milk_temp.columns = pd.MultiIndex.from_product([milk_production_data.columns, ['MilkTemp']])
merged_production_data1 = egg_temp[['2007-08']].join(milk_temp[['2007-08']])
for year, item in egg_temp.columns[1:]:
    temp = egg_temp[[year]].join(milk_temp[[year]])
    merged_production_data1 = merged_production_data1.join(temp)
merged_production_data1.fillna(0, inplace=True)
merged_production_data1.head()

# Selecting regions for visualization
regions = merged_production_data1[:35].index
cmap = plt.get_cmap("tab20c")

# Creating subplots for pie charts
_, ax = plt.subplots(1, 2, figsize=(20, 10))
size = 0.3

# Plotting pie chart for egg production
ax[0].pie(merged_production_data.loc[regions, 'Egg'].to_numpy().flatten(),
          radius=1-size, wedgeprops=dict(width=0.3, edgecolor='w'))
ax[0].pie(merged_production_data.loc[regions, 'Egg'].to_numpy().sum(axis=1),
          radius=1, wedgeprops=dict(width=0.3, edgecolor='w'), labels=regions)
ax[0].legend(merged_production_data[['Egg']].columns.get_level_values(
    1), loc='upper left', bbox_to_anchor=(1, 1), fontsize=12)

# Plotting pie chart for milk production
ax[1].pie(merged_production_data.loc[regions, 'Milk'].to_numpy().flatten(),
          radius=1-size, wedgeprops=dict(width=0.3, edgecolor='w'))
ax[1].pie(merged_production_data.loc[regions, 'Milk'].to_numpy().sum(axis=1),
          radius=1, wedgeprops=dict(width=0.3, edgecolor='w'), labels=regions)
ax[1].legend(merged_production_data[['Milk']].columns.get_level_values(
    1), loc='upper left', bbox_to_anchor=(1, 1), fontsize=12)

# Displaying the pie charts
plt.show()

# Preparing egg production data for treemap visualization
egg_production_df = merged_production_data['Egg'].drop('All India').reset_index()
egg_production_df = egg_production_df.melt(id_vars='States/Uts', var_name='Year',
                     value_name='Production')

# Plotting treemap for egg production
fig = px.treemap(egg_production_df, path=['States/Uts', 'Year'],
                 values='Production', color_continuous_scale='RdBu')
fig.show()

# Preparing milk production data for treemap visualization
milk_production_df = merged_production_data['Milk'].drop('All India').reset_index()
milk_production_df = milk_production_df.melt(id_vars='States/Uts',
                       var_name='Year', value_name='Production')

# Plotting treemap for milk production
fig = px.treemap(milk_production_df, path=['States/Uts', 'Year'],
                 values='Production', color_continuous_scale='RdBu')
fig.show()